{"version":3,"sources":["components/Card.js","components/ImageSearch.js","App.js","index.js"],"names":["Card","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","console","log","hits","catch","err","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAoCeA,MAlCf,YAA0B,IAAVC,EAAS,EAATA,MAENC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,6BACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0CAAf,YACcH,EAAMO,MAEpB,4BACI,4BACI,2CAAyBP,EAAMQ,OAEnC,4BACI,+CAA6BR,EAAMS,WAEvC,4BACI,2CAAyBT,EAAMU,SAI3C,yBAAKP,UAAU,aACVF,EAAKU,KAAI,SAAAC,GAAG,OACT,0BAAMT,UAAU,gGAAgGU,IAAKD,GAArH,IAA4HA,UCGrIE,MA7Bf,YAAsC,IAAfC,EAAc,EAAdA,WAAc,EAETC,mBAAS,IAFA,mBAE1BC,EAF0B,KAEpBC,EAFoB,KASjC,OACI,yBAAKf,UAAU,kDACX,0BAAMgB,SAPG,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAKmBd,UAAU,mBAChC,yBAAKA,UAAU,8DACX,2BAAOmB,SAAW,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QACxCrB,UAAU,oGAEVsB,KAAK,OACLC,YAAY,+BACZ,4BACAvB,UAAU,oIAGVsB,KAAK,UAJL,cCwBLE,MAvCf,WAAgB,IAAD,EAEeX,mBAAS,IAFxB,mBAENY,EAFM,KAEEC,EAFF,OAGqBb,oBAAS,GAH9B,mBAGNc,EAHM,KAGKC,EAHL,OAIWf,mBAAS,IAJpB,mBAINgB,EAJM,KAIAC,EAJA,KAkBb,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,sBACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZX,EAAUW,EAAKG,MACfZ,GAAa,MAEda,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAC3B,CAACb,IAGF,6BACE,kBAAC,EAAD,CACAjB,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,MAC9B,yBAAKd,UAAU,sBACX2B,GAA+B,IAAlBF,EAAOkB,QACtB,wBAAI3C,UAAU,sCAAd,qCACC2B,EACG,wBAAI3B,UAAU,sCAAd,cACA,yBAAKA,UAAU,0BACdyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAMa,IAAKb,EAAM+C,GAAI/C,MAAOA,WC5B1CgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1aa6c071.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Card({ image }) {\n\n    const tags = image.tags.split(',');\n\n    return (\n        <div>\n            <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n                <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\n                <div className=\"px-6 py-4\">\n                    <div className=\"font-bold text-purple-500 text-xl mb-2\">\n                        Photo by {image.user}\n                    </div>\n                    <ul>\n                        <li>\n                            <strong>Views: </strong>{image.views}\n                        </li>\n                        <li>\n                            <strong>Downloads: </strong>{image.downloads}\n                        </li>\n                        <li>\n                            <strong>Likes: </strong>{image.likes}\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"px-6 py-4\">\n                    {tags.map(tag => (\n                        <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-600 mr-2 my-1\" key={tag}>#{tag}</span>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n\n","import React, {useState} from 'react'\n\nfunction ImageSearch({ searchText }) {\n\n    const [text, setText] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        searchText(text);\n    }\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n                    <input onChange={ e => setText(e.target.value)}\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700\n                    mr-3 py-2 px-2 focus:outline-none\"\n                    type=\"text\" \n                    placeholder=\"Search for a picture of...\"></input>\n                    <button \n                    className=\"flex-shrink-1 bg-teal-500 hover:bg-teal-700 \n                    border-teal-500 hover:border-teal-700 text-sm border-4 \n                    text-white py 1 px-2 rounded\" \n                    type=\"submit\">Search</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch\n","import React, { useState, useEffect } from 'react';\nimport Card from './components/Card'\nimport Search from './components/ImageSearch'\n\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setImages(data.hits);\n        setIsLoading(false)\n      })\n      .catch(err => console.log(err));\n  }, [term] );\n\n  return (\n    <div>\n      <Search\n      searchText={(text) => setTerm(text)}/>\n      <div className=\"container mx-auto\">\n        {!isLoading && images.length === 0 && \n        <h2 className=\"text-6xl text-center mx-auto mt-32\">Nothing found. Try something else</h2>}\n        {isLoading\n          ? <h2 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h2>\n          : <div className=\"grid grid-cols-3 gap-4\">\n            {images.map(image => (\n              <Card key={image.id} image={image} />\n            ))}\n          </div>}\n      </div>\n    </div>\n    \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}